{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chenxi/xii/\\u4EE3\\u7801\\u533A4/umin/src/components/Menu.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { VStack, Box, HStack, useColorMode } from '@chakra-ui/core';\nimport { BsBarChart, BsTerminalFill, BsAward, BsCreditCard, BsClipboardData, BsPerson, BsShieldLock, BsBell, BsBootstrapReboot } from 'react-icons/bs';\n// * Mock menu list data\nconst menuList = [[{\n  id: 1,\n  name: '做题分析',\n  icon: 'BsBarChart'\n}, {\n  id: 2,\n  name: '进度管理',\n  icon: 'BsTerminalFill'\n}], [{\n  id: 3,\n  name: '积分',\n  icon: 'BsAward'\n}, {\n  id: 4,\n  name: '优惠券',\n  icon: 'BsCreditCard'\n}, {\n  id: 5,\n  name: '订单',\n  icon: 'BsClipboardData'\n}], [{\n  id: 6,\n  name: '个人资料',\n  icon: 'BsPerson'\n}, {\n  id: 7,\n  name: '账号安全',\n  icon: 'BsShieldLock'\n}, {\n  id: 8,\n  name: '通知与隐私',\n  icon: 'BsBell'\n}, {\n  id: 9,\n  name: '体验计划',\n  icon: 'BsBootstrapReboot'\n}]];\n\nconst VectorIcon = props => {\n  switch (props.iconName) {\n    case 'BsBarChart':\n      return /*#__PURE__*/_jsxDEV(BsBarChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 31\n      }, this);\n\n    case 'BsTerminalFill':\n      return /*#__PURE__*/_jsxDEV(BsTerminalFill, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 35\n      }, this);\n\n    case 'BsAward':\n      return /*#__PURE__*/_jsxDEV(BsAward, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }, this);\n\n    case 'BsCreditCard':\n      return /*#__PURE__*/_jsxDEV(BsCreditCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this);\n\n    case 'BsClipboardData':\n      return /*#__PURE__*/_jsxDEV(BsClipboardData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 36\n      }, this);\n\n    case 'BsPerson':\n      return /*#__PURE__*/_jsxDEV(BsPerson, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this);\n\n    case 'BsShieldLock':\n      return /*#__PURE__*/_jsxDEV(BsShieldLock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }, this);\n\n    case 'BsBell':\n      return /*#__PURE__*/_jsxDEV(BsBell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this);\n\n    case 'BsBootstrapReboot':\n      return /*#__PURE__*/_jsxDEV(BsBootstrapReboot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 38\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(BsBarChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n  }\n};\n\n_c = VectorIcon;\n\nconst MenuListSection = props => {\n  const {\n    section\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: section && section.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n      item: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c2 = MenuListSection;\n\nconst MenuItem = props => {\n  _s();\n\n  const {\n    item\n  } = props;\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const [clickedNum, setClickedNum] = useState();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    as: \"button\",\n    d: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    p: 4,\n    fontSize: 16,\n    fontWeight: 450,\n    mt: 6,\n    w: \"100%\",\n    cursor: \"pointer\",\n    borderRadius: \"5px\",\n    _hover: {\n      color: \"rgba(45, 181, 93, 1)\",\n      bgColor: colorMode === \"light\" ? \"rgba(0, 0, 0, 0.04)\" : \"rgba(255, 255, 255, 0.04)\"\n    },\n    bgColor: clickedNum === item.id ? colorMode === \"light\" ? \"rgba(0, 0, 0, 0.04)\" : \"rgba(255, 255, 255, 0.04)\" : \"\",\n    color: clickedNum === item.id ? colorMode === \"light\" ? \"rgba(45, 181, 93, 1)\" : \"rgba(45, 181, 93, 1)\" : \"rgba(140, 140, 140, 1)\",\n    outline: \"none\",\n    onClick: () => setClickedNum(item.id),\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(VectorIcon, {\n        iconName: item.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        as: \"span\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MenuItem, \"qKsk0HVyI0JGUf9+3u1bBYwju6s=\", false, function () {\n  return [useColorMode];\n});\n\n_c3 = MenuItem;\nexport const Menu = () => {\n  _s2();\n\n  // const { colorMode, toggleColorMode } = useColorMode()\n  // const [clickedNum, setClickedNum] = useState<number | undefined>()\n  const [menuTreeNodes, setMenuTreeNodes] = useState(null);\n  useEffect(() => {\n    const menuTree = menuList.length !== 0 ? renderMenuList(menuList) : null;\n    setMenuTreeNodes(menuTree);\n  }, []);\n\n  const renderMenuList = menuListData => {\n    return menuListData.map((section, sectionKey) => /*#__PURE__*/_jsxDEV(MenuListSection, {\n      section: section\n    }, sectionKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 55\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    children: menuTreeNodes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Menu, \"HWCvJA1uRbGJKPlkmOeupN/3ZQE=\");\n\n_c4 = Menu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"VectorIcon\");\n$RefreshReg$(_c2, \"MenuListSection\");\n$RefreshReg$(_c3, \"MenuItem\");\n$RefreshReg$(_c4, \"Menu\");","map":{"version":3,"sources":["/Users/chenxi/xii/代码区4/umin/src/components/Menu.tsx"],"names":["React","useState","useEffect","VStack","Box","HStack","useColorMode","BsBarChart","BsTerminalFill","BsAward","BsCreditCard","BsClipboardData","BsPerson","BsShieldLock","BsBell","BsBootstrapReboot","menuList","id","name","icon","VectorIcon","props","iconName","MenuListSection","section","map","item","index","MenuItem","colorMode","toggleColorMode","clickedNum","setClickedNum","color","bgColor","Menu","menuTreeNodes","setMenuTreeNodes","menuTree","length","renderMenuList","menuListData","sectionKey"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Dispatch, SetStateAction} from 'react'\nimport { VStack, Box, HStack, useColorMode, useColorModeValue } from '@chakra-ui/core';\nimport {BsBarChart, BsTerminalFill, BsAward, BsCreditCard, BsClipboardData, BsPerson, BsShieldLock, BsBell, BsBootstrapReboot} from 'react-icons/bs'\n\ninterface IMenuItem {\n  id: number\n  name: string\n  icon: string\n}\n\ninterface IMenuItemProps {\n  item: IMenuItem\n}\n\ninterface IMenuListSection  {\n  section: IMenuItem[]\n}\n\n// * Mock menu list data\nconst menuList: IMenuItem[][] = [\n  [\n    {id: 1, name: '做题分析', icon: 'BsBarChart'},\n    {id: 2, name: '进度管理', icon: 'BsTerminalFill'},\n  ],\n  [\n    {id: 3, name: '积分', icon: 'BsAward'},\n    {id: 4, name: '优惠券', icon: 'BsCreditCard'},\n    {id: 5, name: '订单', icon: 'BsClipboardData'},\n  ],\n  [\n    {id: 6, name: '个人资料', icon: 'BsPerson'},\n    {id: 7, name: '账号安全', icon: 'BsShieldLock'},\n    {id: 8, name: '通知与隐私', icon: 'BsBell'},\n    {id: 9, name: '体验计划', icon: 'BsBootstrapReboot'},\n  ]\n]\n\nconst VectorIcon = (props: { iconName: string }): JSX.Element => {\n  switch (props.iconName) {\n    case 'BsBarChart': return <BsBarChart />\n    case 'BsTerminalFill': return <BsTerminalFill />\n    case 'BsAward': return <BsAward />\n    case 'BsCreditCard': return <BsCreditCard />\n    case 'BsClipboardData': return <BsClipboardData />\n    case 'BsPerson': return <BsPerson />\n    case 'BsShieldLock': return <BsShieldLock />\n    case 'BsBell': return <BsBell />\n    case 'BsBootstrapReboot': return <BsBootstrapReboot />\n    default: return <BsBarChart />\n  }\n}\n\nconst MenuListSection = (props: IMenuListSection) => {\n  const { section } = props;\n\n  return (\n    <>\n      {section && section.map((item, index) => (\n        <MenuItem key={index} item={item}/>\n      ))}\n    </>\n  )\n}\n\nconst MenuItem = (props: IMenuItemProps) => {\n  const { item } = props;\n  const { colorMode, toggleColorMode } = useColorMode()\n  const [clickedNum, setClickedNum] = useState<number | undefined>()\n\n  return (\n    <Box\n      as=\"button\"\n      key={item.id}\n      d=\"flex\"\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      p={4}\n      fontSize={16}\n      fontWeight={450}\n      mt={6}\n      w=\"100%\"\n      cursor=\"pointer\"\n      borderRadius=\"5px\"\n      _hover={{ color: \"rgba(45, 181, 93, 1)\", bgColor: colorMode === \"light\" ? \"rgba(0, 0, 0, 0.04)\" : \"rgba(255, 255, 255, 0.04)\" }}\n      bgColor={clickedNum === item.id ? colorMode === \"light\" ? \"rgba(0, 0, 0, 0.04)\" : \"rgba(255, 255, 255, 0.04)\" : \"\"}\n      color={clickedNum === item.id ? colorMode === \"light\" ? \"rgba(45, 181, 93, 1)\" : \"rgba(45, 181, 93, 1)\" : \"rgba(140, 140, 140, 1)\"}\n      outline=\"none\"\n      onClick={() => setClickedNum(item.id)}>\n      <HStack spacing={3}>\n        <VectorIcon iconName={item.icon} />\n        <Box as=\"span\">\n          {item.name}\n        </Box>\n      </HStack>\n    </Box>\n  )\n}\n\nexport const Menu = () => {\n  // const { colorMode, toggleColorMode } = useColorMode()\n  // const [clickedNum, setClickedNum] = useState<number | undefined>()\n  const [menuTreeNodes, setMenuTreeNodes] = useState<JSX.Element[] | null>(null)\n\n  useEffect(() => {\n    const menuTree = menuList.length !== 0 ? renderMenuList(menuList) : null\n    setMenuTreeNodes(menuTree)\n  }, [])\n\n  const renderMenuList = (menuListData: IMenuItem[][]): JSX.Element[] => {\n    return menuListData.map((section, sectionKey) => (<MenuListSection key={sectionKey} section={section} />))\n  }\n\n  return (\n    <VStack>\n      {menuTreeNodes}\n    </VStack>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}