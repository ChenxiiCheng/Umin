type User {
  id: Int!
  email: String!
  nickname: String
  password: String
  isAdmin: Boolean!
  isSuperUser: Boolean!
  isActive: Boolean!
  createdAt: String!
  updatedAt: String!
}

type UserWithToken {
  user: User!
  token: String!
}

input UserInput {
  email: String!
  nickname: String!
  password: String!
}

input UserLogin {
  email: String!
  password: String!
}

type Query {
  getAllUsers: [User!]
  getUserByEmail(email: String!): User
}

type Mutation {
  createUser(user: UserInput!): User
  createAdminUser(user: UserInput!): User
  createSuperUser(user: UserInput!): User
  updateUserInfo(data: UserInput!): User
  login(user: UserLogin!): UserWithToken
}
